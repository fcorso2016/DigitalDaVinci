/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Elements;

import java.awt.Graphics;
import java.awt.Image;

/**
 *
 * @author cryst
 */
public class DrawingPlane extends javax.swing.JPanel {
    
    public Image bg, fg;
    private int biggestWidth, biggestHeight;

    /**
     * Creates new form DrawingPlane
     */
    public DrawingPlane() {
        initComponents();
        biggestWidth = getWidth();
        biggestHeight = getHeight();
        bg = this.createImage(biggestWidth, biggestHeight);
        fg = this.createImage(biggestWidth, biggestHeight);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void paint(Graphics g) {
        super.paint(g);
        g.drawImage(bg, 0, 0, null);
        if (bg == null) {
            bg = this.createImage(getWidth(), getHeight());
            fg = this.createImage(getWidth(), getHeight());
        }
        boolean resize = false;
        if (getWidth() > biggestWidth) {
            biggestWidth = getWidth();
            resize = true;
        }
        if (getHeight() > biggestHeight) {
            biggestHeight = getHeight();
            resize = true;
        }
        if (resize) {
            Image temp = this.createImage(biggestWidth, biggestWidth);
            temp.getGraphics().drawImage(bg, 0, 0, null);
            bg = this.createImage(getWidth(), getHeight());
            bg.getGraphics().drawImage(temp, 0, 0, null);
            fg = this.createImage(getWidth(), getHeight());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
