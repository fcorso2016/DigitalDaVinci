package Program;

//============================================================================
// * Imported Classes
//============================================================================
import Brushes.RoundRectBrush;
import Brushes.RectBrush;
import Brushes.OvalBrush;
import Brushes.LineBrush;
import Brushes.Brush;
import Brushes.FillBrush;
import Brushes.FreeHandBrush;
import Brushes.TextBrush;
import Misc.SuperStroke;
import Printer.MyPrintable;
import Shapes.DrawingShape;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.awt.print.Book;
import java.awt.print.PageFormat;
import java.awt.print.Printable;
import java.awt.print.PrinterException;
import java.awt.print.PrinterJob;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JColorChooser;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

//============================================================================
// * DotPad
//----------------------------------------------------------------------------
// This serves as the main window of the program and serves as the canvas to
// which the circles are drawn.
//============================================================================
public class Canvas extends javax.swing.JFrame {

    //------------------------------------------------------------------------
    // * Instance Variables
    //------------------------------------------------------------------------
    int oldX;
    int oldY;
    Brush brush;
    public ArrayList<DrawingShape> shapes;
    private Color color1 = new Color(0, 0, 0, 255);
    private Color color2 = new Color(0, 0, 0, 255);

    //------------------------------------------------------------------------
    // * Object Initialization
    //------------------------------------------------------------------------
    public Canvas() {
        shapes = new ArrayList();
        brush = new FreeHandBrush();
        initComponents();
        brush.color1 = color1;
        brush.color2 = color2;
    }

    //------------------------------------------------------------------------
    // * This method is called from within the constructor to initialize the form.
    // WARNING: Do NOT modify this code. The content of this method is always
    // regenerated by the Form Editor.
    //------------------------------------------------------------------------
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jSlider5 = new javax.swing.JSlider();
        jSlider4 = new javax.swing.JSlider();
        jLabel7 = new javax.swing.JLabel();
        colorButton2 = new Elements.ColorButton();
        jLabel9 = new javax.swing.JLabel();
        colorButton1 = new Elements.ColorButton();
        jLabel8 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jToolBar2 = new javax.swing.JToolBar();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        myLineButton1 = new Elements.MyLineButton();
        myOvalButton1 = new Elements.MyOvalButton();
        myRectButton1 = new Elements.MyRectButton();
        myRoundedRectButton1 = new Elements.MyRoundedRectButton();
        fillCheck2 = new Elements.FillCheck();
        dashedLineCheck1 = new Elements.DashedLineCheck();
        jButton1 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        drawingPlane1 = new Elements.DrawingPlane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel4.setText("Line Tickness");

        jSlider5.setMajorTickSpacing(1);
        jSlider5.setMaximum(10);
        jSlider5.setMinimum(1);
        jSlider5.setPaintTicks(true);
        jSlider5.setValue(1);

        jSlider4.setMajorTickSpacing(50);
        jSlider4.setMaximum(255);
        jSlider4.setMinorTickSpacing(10);
        jSlider4.setPaintTicks(true);
        jSlider4.setValue(255);

        jLabel7.setText("Alpha");

        colorButton2.setText("    ");
        colorButton2.setFocusable(false);
        colorButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colorButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        colorButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Color 2");

        colorButton1.setText("    ");
        colorButton1.setFocusable(false);
        colorButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        colorButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        colorButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorButton1ActionPerformed(evt);
            }
        });

        jLabel8.setText("Color 1");

        jCheckBox1.setText("Gradient");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Cyclic");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setText("Texture");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addGap(11, 11, 11)
                .addComponent(jCheckBox3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(50, 50, 50)
                                .addComponent(jLabel9))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(colorButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(colorButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(34, 34, 34)
                        .addComponent(jLabel7)
                        .addGap(63, 63, 63)
                        .addComponent(jLabel4)
                        .addGap(23, 23, 23))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSlider5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSlider4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(colorButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(colorButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jCheckBox2)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 199, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel3, java.awt.BorderLayout.PAGE_END);

        jToolBar2.setRollover(true);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Monado.png"))); // NOI18N
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/chest.png"))); // NOI18N
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton4);

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/boy-classroom-messenger-clipart-classroom-job-clip-art.png"))); // NOI18N
        jButton5.setFocusable(false);
        jButton5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton5.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton5);

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/clear.png"))); // NOI18N
        jButton6.setFocusable(false);
        jButton6.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton6.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton6);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/S_Weapon_Main_Inkbrush.png"))); // NOI18N
        jButton2.setToolTipText("");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton2);

        myLineButton1.setText("       ");
        myLineButton1.setFocusable(false);
        myLineButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myLineButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myLineButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myLineButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(myLineButton1);

        myOvalButton1.setText("       ");
        myOvalButton1.setFocusable(false);
        myOvalButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myOvalButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myOvalButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myOvalButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(myOvalButton1);

        myRectButton1.setText("       ");
        myRectButton1.setFocusable(false);
        myRectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myRectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myRectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRectButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(myRectButton1);

        myRoundedRectButton1.setText("       ");
        myRoundedRectButton1.setFocusable(false);
        myRoundedRectButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        myRoundedRectButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        myRoundedRectButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                myRoundedRectButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(myRoundedRectButton1);

        fillCheck2.setText("Fill");
        fillCheck2.setFocusable(false);
        fillCheck2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        fillCheck2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        fillCheck2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fillCheck2ActionPerformed(evt);
            }
        });
        jToolBar2.add(fillCheck2);

        dashedLineCheck1.setText("              ");
        dashedLineCheck1.setFocusable(false);
        dashedLineCheck1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        dashedLineCheck1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        dashedLineCheck1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dashedLineCheck1ActionPerformed(evt);
            }
        });
        jToolBar2.add(dashedLineCheck1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/S_Weapon_Main_Slosher.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assets/Donald-Trump-Transparent.png"))); // NOI18N
        jButton7.setFocusable(false);
        jButton7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton7.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton7);

        jLabel5.setText("Font Size");
        jToolBar2.add(jLabel5);

        jTextField2.setText("12");
        jTextField2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField2ActionPerformed(evt);
            }
        });
        jToolBar2.add(jTextField2);

        jLabel6.setText("Text");
        jToolBar2.add(jLabel6);

        jTextField1.setText("Type words here. I know words. I have the best words.");
        jToolBar2.add(jTextField1);

        getContentPane().add(jToolBar2, java.awt.BorderLayout.PAGE_START);

        drawingPlane1.setToolTipText("");
        drawingPlane1.setMinimumSize(new java.awt.Dimension(640, 480));
        drawingPlane1.setPreferredSize(new java.awt.Dimension(460, 480));
        drawingPlane1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                drawingPlane1MouseDragged(evt);
            }
        });
        drawingPlane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                drawingPlane1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                drawingPlane1MouseReleased(evt);
            }
        });
        drawingPlane1.setLayout(new java.awt.BorderLayout());
        getContentPane().add(drawingPlane1, java.awt.BorderLayout.CENTER);

        jMenu1.setText("File");

        jMenuItem2.setText("Save");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Open");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);

        jMenuItem3.setText("Print");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("Clear");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //------------------------------------------------------------------------
    // * Paint the Window
    //------------------------------------------------------------------------
    public void paint(Graphics g) {
        super.paint(g);
    }

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        shapes.clear();
        drawingPlane1.repaint();
        drawingPlane1.bg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
        drawingPlane1.fg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JFileChooser jfc = new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("PNG File", "png");
        jfc.setFileFilter(filter);
        if (JFileChooser.APPROVE_OPTION == jfc.showSaveDialog(null)) {
            String filename = jfc.getSelectedFile().toString();
            if (!filename.endsWith(".png")) {
                filename += ".png";
            }
            File f = new File(filename);
            try {
                ImageIO.write((RenderedImage) drawingPlane1.bg, "png", f);
            } catch (IOException ex) {
                Logger.getLogger(Canvas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        PrinterJob pj = PrinterJob.getPrinterJob();
        PageFormat pf = pj.pageDialog(new PageFormat());
        if (pj.printDialog()) {
            try {
                Book b = new Book();
                if (drawingPlane1.bg == null) {
                    drawingPlane1.bg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
                    drawingPlane1.fg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
                }
                Printable printable = new MyPrintable(drawingPlane1.bg);
                b.append(printable, pf);
                pj.setPageable(b);
                pj.print();
            } catch (PrinterException ex) {
                JOptionPane.showMessageDialog(null, "Failed to send data to printer.", "Print Failed", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        JFileChooser jfc = new JFileChooser(".");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image File", "bmp", "jpg", "jpeg", "png");
        jfc.setFileFilter(filter);
        if (JFileChooser.APPROVE_OPTION == jfc.showOpenDialog(null)) {
            File f = jfc.getSelectedFile();
            try {
                BufferedImage pic = ImageIO.read(f);
                drawingPlane1.repaint();
                drawingPlane1.bg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
                drawingPlane1.fg = this.createImage(drawingPlane1.getWidth(), drawingPlane1.getHeight());
                drawingPlane1.bg.getGraphics().drawImage(pic, 0, 0, null);
                drawingPlane1.getGraphics().drawImage(drawingPlane1.bg, 0, 0, null);
            } catch (IOException ex) {
                Logger.getLogger(Canvas.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void drawingPlane1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPlane1MousePressed
        if (brush.isText()) {
            String text = jTextField1.getText();
            Graphics fgg = drawingPlane1.fg.getGraphics();
            fgg.drawImage(drawingPlane1.bg, 0, 0, null);
            fgg.setColor(brush.color1);
            Font font = new Font(fgg.getFont().getName(), fgg.getFont().getStyle(), brush.textSize);
            fgg.setFont(font);
            fgg.drawString(text, evt.getX(), evt.getY());
            Graphics g = drawingPlane1.getGraphics();
            g.drawImage(drawingPlane1.fg, 0, 0, null);
            Graphics bgg = drawingPlane1.bg.getGraphics();
            bgg.drawImage(drawingPlane1.fg, 0, 0, null);
        } else if (brush.isFill()) {
            Graphics fgg = drawingPlane1.fg.getGraphics();
            fgg.drawImage(drawingPlane1.bg, 0, 0, null);
            int rgb = brush.color1.getRGB();
            fillAtPoint(evt.getX(), evt.getY(), rgb);
            Graphics g = drawingPlane1.getGraphics();
            g.drawImage(drawingPlane1.fg, 0, 0, null);
            Graphics bgg = drawingPlane1.bg.getGraphics();
            bgg.drawImage(drawingPlane1.fg, 0, 0, null);
        } else {
            oldX = evt.getX();
            oldY = evt.getY();
        }
    }//GEN-LAST:event_drawingPlane1MousePressed

    void fillAtPoint(int x, int y, int rgb) {
        BufferedImage bfg = (BufferedImage) drawingPlane1.fg;
        fillCrosshairs(bfg, x, y, rgb);
        int dx = x + 1;
        int dy = y + 1;
        while (true) {
            if (dx > bfg.getWidth() - 1) {
                break;
            } else if (dy > bfg.getHeight() - 1) {
                break;
            } else if (bfg.getRGB(dx, dy) == rgb) {
                break;
            }
            fillCrosshairs(bfg, dx, dy, rgb);
            dx++;
            dy++;
        }
        dx = x - 1;
        dy = y - 1;
        while (true) {
            if (dx < 0) {
                break;
            } else if (dy < 0) {
                break;
            } else if (bfg.getRGB(dx, dy) == rgb) {
                break;
            }
            fillCrosshairs(bfg, dx, dy, rgb);
            dx--;
            dy--;
        }
        dx = x + 1;
        dy = y - 1;
        while (true) {
            if (dx > bfg.getWidth() - 1) {
                break;
            } else if (dy < 0) {
                break;
            } else if (bfg.getRGB(dx, dy) == rgb) {
                break;
            }
            fillCrosshairs(bfg, dx, dy, rgb);
            dx++;
            dy--;
        }
        dx = x - 1;
        dy = y + 1;
        while (true) {
            if (dx < 0) {
                break;
            } else if (dy > bfg.getHeight() - 1) {
                break;
            } else if (bfg.getRGB(dx, dy) == rgb) {
                break;
            }
            fillCrosshairs(bfg, dx, dy, rgb);
            dx--;
            dy++;
        }
    }

    void fillCrosshairs(BufferedImage bfg, int x, int y, int rgb) {
        bfg.setRGB(x, y, rgb);
        for (int dx = x + 1; dx < bfg.getWidth(); dx++) {
            int dy = y;
            if (bfg.getRGB(dx, dy) == rgb) {
                break;
            } else {
                bfg.setRGB(dx, dy, rgb);
            }
        }
        for (int dx = x - 1; dx > 0; dx--) {
            int dy = y;
            if (bfg.getRGB(dx, dy) == rgb) {
                break;
            } else {
                bfg.setRGB(dx, dy, rgb);
            }
        }
        for (int dy = y + 1; dy < bfg.getHeight(); dy++) {
            int dx = x;
            if (bfg.getRGB(dx, dy) == rgb) {
                break;
            } else {
                bfg.setRGB(dx, dy, rgb);
            }
        }
        for (int dy = y - 1; dy > 0; dy--) {
            int dx = x;
            if (bfg.getRGB(dx, dy) == rgb) {
                break;
            } else {
                bfg.setRGB(dx, dy, rgb);
            }
        }
    }

    private void drawingPlane1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPlane1MouseReleased
        if (!brush.isFill()) {
            Graphics bgg = drawingPlane1.bg.getGraphics();
            bgg.drawImage(drawingPlane1.fg, 0, 0, null);
            shapes.add(brush.getShape());
        }
    }//GEN-LAST:event_drawingPlane1MouseReleased

    private void drawingPlane1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_drawingPlane1MouseDragged
        if (brush.isFill()) {
            // Do nothing
        } else if (brush.isFreeHand()) {
            Graphics fgg = drawingPlane1.fg.getGraphics();
            fgg.drawImage(drawingPlane1.bg, 0, 0, null);
            SuperStroke bs = new SuperStroke(jSlider5.getValue());
            brush.stroke = bs;
            brush.drawItem(this, fgg, oldX, evt.getX(), oldY, evt.getY());
            Graphics bgg = drawingPlane1.bg.getGraphics();
            bgg.drawImage(drawingPlane1.fg, 0, 0, null);
            shapes.add(brush.getShape());
            oldX = evt.getX();
            oldY = evt.getY();
        } else {
            Graphics fgg = drawingPlane1.fg.getGraphics();
            fgg.drawImage(drawingPlane1.bg, 0, 0, null);
            if (dashedLineCheck1.isSelected()) {
                float[] fa = {10, 10, 10};
                SuperStroke bs = new SuperStroke(jSlider5.getValue(), BasicStroke.CAP_SQUARE, BasicStroke.JOIN_BEVEL, 10, fa, 10);
                brush.stroke = bs;
            } else {
                SuperStroke bs = new SuperStroke(jSlider5.getValue());
                brush.stroke = bs;
            }
            brush.fill = fillCheck2.isSelected();
            brush.drawItem(this, fgg, oldX, evt.getX(), oldY, evt.getY());
        }
        Graphics g = drawingPlane1.getGraphics();
        g.drawImage(drawingPlane1.fg, 0, 0, null);
    }//GEN-LAST:event_drawingPlane1MouseDragged

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        brush = new FillBrush();
        brush.color1 = color1;
        brush.color2 = color2;
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        brush = new FreeHandBrush();
        brush.color1 = color1;
        brush.color2 = color2;
    }//GEN-LAST:event_jButton2ActionPerformed

    private void myLineButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myLineButton1ActionPerformed
        brush = new LineBrush();
        brush.color1 = color1;
        brush.color2 = color2;
        brush.gradient = jCheckBox1.isSelected();
        brush.cyclic = jCheckBox2.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_myLineButton1ActionPerformed

    private void myOvalButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myOvalButton1ActionPerformed
        brush = new OvalBrush();
        brush.color1 = color1;
        brush.color2 = color2;
        brush.gradient = jCheckBox1.isSelected();
        brush.cyclic = jCheckBox2.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_myOvalButton1ActionPerformed

    private void myRectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRectButton1ActionPerformed
        brush = new RectBrush();
        brush.color1 = color1;
        brush.color2 = color2;
        brush.gradient = jCheckBox1.isSelected();
        brush.cyclic = jCheckBox2.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_myRectButton1ActionPerformed

    private void myRoundedRectButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_myRoundedRectButton1ActionPerformed
        brush = new RoundRectBrush();
        brush.color1 = color1;
        brush.color2 = color2;
        brush.gradient = jCheckBox1.isSelected();
        brush.cyclic = jCheckBox2.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_myRoundedRectButton1ActionPerformed

    private void dashedLineCheck1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dashedLineCheck1ActionPerformed
        if (dashedLineCheck1.isSelected()) {
            fillCheck2.setSelected(false);
        }
    }//GEN-LAST:event_dashedLineCheck1ActionPerformed

    private void fillCheck2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fillCheck2ActionPerformed
        if (fillCheck2.isSelected()) {
            dashedLineCheck1.setSelected(false);
        }
    }//GEN-LAST:event_fillCheck2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        brush = new TextBrush();
        brush.textSize = Integer.parseInt(jTextField2.getText());
        brush.color1 = color1;
        brush.color2 = color2;
        brush.gradient = jCheckBox1.isSelected();
        brush.cyclic = jCheckBox2.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextField2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField2ActionPerformed
        brush.textSize = Integer.parseInt(jTextField2.getText());
    }//GEN-LAST:event_jTextField2ActionPerformed

    private void colorButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButton2ActionPerformed
        color1 = JColorChooser.showDialog(this, "Pick a Color", null);
        colorButton2.setColor(color1);
        repaint();
    }//GEN-LAST:event_colorButton2ActionPerformed

    private void colorButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorButton1ActionPerformed
        color2 = JColorChooser.showDialog(this, "Pick a Color", null);
        colorButton1.setColor(color2);
        repaint();
    }//GEN-LAST:event_colorButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        if (jCheckBox3.isSelected()) {
            jCheckBox3.setSelected(false);
        }
        brush.gradient = jCheckBox1.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        brush.cyclic = jCheckBox2.isSelected();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        if (jCheckBox1.isSelected()) {
            jCheckBox1.setSelected(false);
        }
        brush.gradient = jCheckBox1.isSelected();
        brush.texture = jCheckBox3.isSelected();
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    //------------------------------------------------------------------------
    // * Main Processing
    //------------------------------------------------------------------------
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Canvas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Canvas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Elements.ColorButton colorButton1;
    private Elements.ColorButton colorButton2;
    private Elements.DashedLineCheck dashedLineCheck1;
    private Elements.DrawingPlane drawingPlane1;
    private Elements.FillCheck fillCheck2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JSlider jSlider4;
    private javax.swing.JSlider jSlider5;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JToolBar jToolBar2;
    private Elements.MyLineButton myLineButton1;
    private Elements.MyOvalButton myOvalButton1;
    private Elements.MyRectButton myRectButton1;
    private Elements.MyRoundedRectButton myRoundedRectButton1;
    // End of variables declaration//GEN-END:variables
}
